server:
  port: 8082
  servlet:
    context-path: /api
  tomcat:
    max-threads: 200
    connection-timeout: 5000

spring:
  main:
    allow-bean-definition-overriding: true
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db?useSSL=false&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    hikari:
      # 连接池配置
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      connection-timeout: 30000
      max-lifetime: 1800000
  
  # Redis配置
  redis:
    enabled: true
    host: localhost
    port: 6379
    database: 0
    timeout: 10000
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
    # 密码（如果有的话）
    # password: 
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
  
  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false
      
  # Spring MVC配置
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

# OpenAPI配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
  packages-to-scan: com.example.orderingsystem.controller

# MyBatis配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.orderingsystem.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: true

# 日志配置
logging:
  level:
    root: info
    com.example.orderingsystem: debug
  file:
    name: logs/ordering-system.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 自定义JWT配置
jwt:
  # JWT加密密钥
  secret: orderingsystem_secret_key
  # token有效时间（单位：秒）
  expiration: 86400
  # token前缀
  tokenPrefix: "Bearer "
  # header名称
  headerName: "Authorization"

# 静态资源配置
resource:
  # 图片上传路径
  image-upload-path: uploads
  # 图片访问路径
  image-access-path: /imgs/**

# 缓存配置
cache:
  # 是否启用缓存
  enabled: true
  # 缓存过期时间（秒）
  ttl: 3600
  # 缓存前缀
  prefix: "ordering-system:" 